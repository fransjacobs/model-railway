/*
 * Copyright 2024 FJA.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jcs.ui.layout.tiles;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.io.File;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import jcs.entities.BlockBean;
import jcs.entities.LocomotiveBean;
import jcs.entities.TileBean;
import static jcs.ui.layout.tiles.UnScaledBlockTileTester.readImage;
import org.tinylog.Logger;

/**
 *
 * @author FJA
 */
public class UnscaledBlockTileFrame extends javax.swing.JFrame {

  private Tile tile;

  /**
   * Creates new form UnscaledBlockTileFrame
   */
  public UnscaledBlockTileFrame() {
    initComponents();
    initTile();
  }

  private void initTile() {
    tile = new Block(TileBean.Orientation.EAST, 750, 250);
    tile.setId("bk-1");

    LocomotiveBean lok = new LocomotiveBean(8L, "NS DHG 6505", 8L, 8, "", "dcc", 100, 0, 0, 1, true, true);
    String imgPath = System.getProperty("user.home") + File.separator + "jcs" + File.separator + "cache" + File.separator + "dcc-ex" + File.separator + "ns dhg 6505.png";
    lok.setIcon(imgPath);
    Image locImage = readImage(imgPath);
    lok.setLocIcon(locImage);

    BlockBean bbe = new BlockBean();
    bbe.setId(tile.getId());
    bbe.setTileId(tile.getId());
    bbe.setDescription("Blok");
    //bbe.setLocomotive(lok);
    //bbe.setBlockState(BlockBean.BlockState.OCCUPIED);
    bbe.setBlockState(BlockBean.BlockState.FREE);
    //bbe.setReverseArrival(true);
    ((Block) tile).setBlockBean(bbe);

    ((AbstractTile) tile).setScaleImage(false);
  }

  @Override
  public void paint(Graphics g) {
    super.paint(g);

    //Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
    int w = this.cPanel.getWidth();
    int h = this.cPanel.getHeight();

    //Logger.trace("Screen: W: " + dim.width + " H: " + dim.height + " Panel w: " + w + " h: " + h + " Size W: " + this.getSize().width + " H: " + this.getSize().height);
    int x = w / 2;
    int y = h / 2 + 50;
    Point center = new Point(x, y);

    tile.setCenter(center);

    Logger.trace("Center: (" + x + "," + y + ")");

    Graphics2D g2d = (Graphics2D) g;
    tile.drawTile(g2d, true);
    tile.drawBounds(g2d);
    tile.drawCenterPoint(g2d, Color.red);

  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    nPanel = new javax.swing.JPanel();
    rotateButton = new javax.swing.JButton();
    cPanel = new javax.swing.JPanel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    rotateButton.setText("Rotate");
    rotateButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        rotateButtonActionPerformed(evt);
      }
    });
    nPanel.add(rotateButton);

    getContentPane().add(nPanel, java.awt.BorderLayout.NORTH);

    cPanel.setPreferredSize(new java.awt.Dimension(1500, 1500));
    getContentPane().add(cPanel, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void rotateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotateButtonActionPerformed
    this.tile.rotate();
    this.repaint();
  }//GEN-LAST:event_rotateButtonActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    try {
      UIManager.setLookAndFeel("com.formdev.flatlaf.FlatLightLaf");
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
      Logger.error(ex);
    }

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(() -> {
      UnscaledBlockTileFrame app = new UnscaledBlockTileFrame();
      app.setTitle("Unscaled Tile Tester");
      app.pack();
      app.setLocationRelativeTo(null);
      app.setVisible(true);
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel cPanel;
  private javax.swing.JPanel nPanel;
  private javax.swing.JButton rotateButton;
  // End of variables declaration//GEN-END:variables
}
