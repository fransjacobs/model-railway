/*
 * Copyright (C) 2019 Frans Jacobs.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package lan.wervel.jcs.ui;

import java.awt.GridLayout;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import lan.wervel.jcs.entities.Turnout;
import lan.wervel.jcs.trackservice.TrackServiceFactory;
import lan.wervel.jcs.ui.widgets.TurnoutRowPanel;
import org.pmw.tinylog.Configurator;
import org.pmw.tinylog.Logger;

/**
 *
 * @author Frans Jacobs
 */
public class TurnoutsPanel extends javax.swing.JPanel {

  /**
   * Creates new form TurnoutsPanel
   */
  public TurnoutsPanel() {
    initComponents();
    initTurnoutPanels();
  }

  private void initTurnoutPanels() {
    if (TrackServiceFactory.getTrackService() == null) {
      return;
    }
    List<Turnout> turnouts = TrackServiceFactory.getTrackService().getTurnouts();

    Logger.trace("There are " + turnouts.size() + " turnouts...");

    this.removeAll();
    int maxW = this.getPreferredSize().width;
    int w = 0, rows = 1, cols = 0;

    for (Turnout turnout : turnouts) {
      TurnoutRowPanel turnoutRowPanel = new TurnoutRowPanel(turnout, TurnoutRowPanel.Y_AXIS);
      w = w + turnoutRowPanel.getPreferredSize().width;
      if (rows == 1) {
        cols++;
      }
      if (w > maxW) {
        //next row
        rows++;
        w = 0;
      }

      this.add(turnoutRowPanel);
      TrackServiceFactory.getTrackService().addAccessoiryListener(turnoutRowPanel);
    }
    GridLayout gl = new GridLayout(rows, cols);

    this.setLayout(gl);
  }

  public static void main(String args[]) {
    Configurator.defaultConfig().level(org.pmw.tinylog.Level.DEBUG).activate();

    try {
      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
      Logger.error(ex);
    }

    java.awt.EventQueue.invokeLater(() -> {
      JFrame f = new JFrame("TurnoutsPanel Tester");
      TurnoutsPanel turnoutsPanel = new TurnoutsPanel();
      f.add(turnoutsPanel);

      f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      f.pack();
      f.setVisible(true);
    });
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
   * method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    setPreferredSize(new java.awt.Dimension(1024, 805));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 400, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 300, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
}
