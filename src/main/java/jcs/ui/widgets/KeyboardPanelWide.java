/*
 * Copyright (C) 2019 frans.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package jcs.ui.widgets;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import jcs.ui.swing.layout.VerticalFlowLayout;
import org.tinylog.Logger;

/**
 *
 * @author frans
 */
public class KeyboardPanelWide extends JPanel {

  /**
   * Creates new form FeedbackMonitorPanel
   */
  public KeyboardPanelWide() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    keyboardTP = new JTabbedPane();
    keyboardsPanel = new JPanel();
    switchPanel1 = new AccessoryKeyPanel16(1);
    switchPanel2 = new AccessoryKeyPanel16(2);
    switchPanel3 = new AccessoryKeyPanel16(3);
    switchPanel4 = new AccessoryKeyPanel16(4);
    keyboardsPanel1 = new JPanel();
    switchPanel5 = new AccessoryKeyPanel16(5);
    switchPanel6 = new AccessoryKeyPanel16(6);
    switchPanel7 = new AccessoryKeyPanel16(7);
    switchPanel8 = new AccessoryKeyPanel16(8);
    keyboardsPanel2 = new JPanel();
    switchPanel9 = new AccessoryKeyPanel16(9);
    switchPanel10 = new AccessoryKeyPanel16(10);
    switchPanel11 = new AccessoryKeyPanel16(11);
    switchPanel12 = new AccessoryKeyPanel16(12);
    keyboardsPanel3 = new JPanel();
    switchPanel13 = new AccessoryKeyPanel16(13);
    switchPanel14 = new AccessoryKeyPanel16(14);
    switchPanel15 = new AccessoryKeyPanel16(15);
    switchPanel16 = new AccessoryKeyPanel16(16);

    setMinimumSize(new Dimension(1010, 850));
    setName("Form"); // NOI18N
    setPreferredSize(new Dimension(1010, 850));
    addComponentListener(new ComponentAdapter() {
      public void componentHidden(ComponentEvent evt) {
        formComponentHidden(evt);
      }
      public void componentShown(ComponentEvent evt) {
        formComponentShown(evt);
      }
    });
    setLayout(new BorderLayout());

    keyboardTP.setMinimumSize(new Dimension(885, 400));
    keyboardTP.setName("keyboardTP"); // NOI18N
    keyboardTP.setPreferredSize(new Dimension(885, 400));
    keyboardTP.setRequestFocusEnabled(false);

    keyboardsPanel.setMinimumSize(new Dimension(1200, 400));
    keyboardsPanel.setName("keyboardsPanel"); // NOI18N
    keyboardsPanel.setPreferredSize(new Dimension(885, 390));
    keyboardsPanel.setLayout(new VerticalFlowLayout());

    switchPanel1.setName("switchPanel1"); // NOI18N
    keyboardsPanel.add(switchPanel1);

    switchPanel2.setName("switchPanel2"); // NOI18N
    keyboardsPanel.add(switchPanel2);

    switchPanel3.setName("switchPanel3"); // NOI18N
    keyboardsPanel.add(switchPanel3);

    switchPanel4.setName("switchPanel4"); // NOI18N
    keyboardsPanel.add(switchPanel4);

    keyboardTP.addTab("1 - 64", keyboardsPanel);

    keyboardsPanel1.setMinimumSize(new Dimension(1200, 400));
    keyboardsPanel1.setName("keyboardsPanel1"); // NOI18N
    keyboardsPanel1.setPreferredSize(new Dimension(885, 390));
    keyboardsPanel1.setRequestFocusEnabled(false);
    keyboardsPanel1.setLayout(new VerticalFlowLayout());

    switchPanel5.setName("switchPanel5"); // NOI18N
    keyboardsPanel1.add(switchPanel5);

    switchPanel6.setName("switchPanel6"); // NOI18N
    keyboardsPanel1.add(switchPanel6);

    switchPanel7.setName("switchPanel7"); // NOI18N
    keyboardsPanel1.add(switchPanel7);

    switchPanel8.setName("switchPanel8"); // NOI18N
    keyboardsPanel1.add(switchPanel8);

    keyboardTP.addTab("65 - 128", keyboardsPanel1);

    keyboardsPanel2.setMinimumSize(new Dimension(1200, 400));
    keyboardsPanel2.setName("keyboardsPanel2"); // NOI18N
    keyboardsPanel2.setPreferredSize(new Dimension(885, 390));
    keyboardsPanel2.setLayout(new VerticalFlowLayout());

    switchPanel9.setName("switchPanel9"); // NOI18N
    keyboardsPanel2.add(switchPanel9);

    switchPanel10.setName("switchPanel10"); // NOI18N
    keyboardsPanel2.add(switchPanel10);

    switchPanel11.setName("switchPanel11"); // NOI18N
    keyboardsPanel2.add(switchPanel11);

    switchPanel12.setName("switchPanel12"); // NOI18N
    keyboardsPanel2.add(switchPanel12);

    keyboardTP.addTab("129 - 192", keyboardsPanel2);

    keyboardsPanel3.setMinimumSize(new Dimension(1200, 400));
    keyboardsPanel3.setName("keyboardsPanel3"); // NOI18N
    keyboardsPanel3.setPreferredSize(new Dimension(885, 390));
    keyboardsPanel3.setLayout(new VerticalFlowLayout());

    switchPanel13.setName("switchPanel13"); // NOI18N
    keyboardsPanel3.add(switchPanel13);

    switchPanel14.setName("switchPanel14"); // NOI18N
    keyboardsPanel3.add(switchPanel14);

    switchPanel15.setName("switchPanel15"); // NOI18N
    keyboardsPanel3.add(switchPanel15);

    switchPanel16.setName("switchPanel16"); // NOI18N
    keyboardsPanel3.add(switchPanel16);

    keyboardTP.addTab("193 - 256", keyboardsPanel3);

    add(keyboardTP, BorderLayout.CENTER);
  }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
    }//GEN-LAST:event_formComponentShown

    private void formComponentHidden(ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
    }//GEN-LAST:event_formComponentHidden

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JTabbedPane keyboardTP;
  private JPanel keyboardsPanel;
  private JPanel keyboardsPanel1;
  private JPanel keyboardsPanel2;
  private JPanel keyboardsPanel3;
  private AccessoryKeyPanel16 switchPanel1;
  private AccessoryKeyPanel16 switchPanel10;
  private AccessoryKeyPanel16 switchPanel11;
  private AccessoryKeyPanel16 switchPanel12;
  private AccessoryKeyPanel16 switchPanel13;
  private AccessoryKeyPanel16 switchPanel14;
  private AccessoryKeyPanel16 switchPanel15;
  private AccessoryKeyPanel16 switchPanel16;
  private AccessoryKeyPanel16 switchPanel2;
  private AccessoryKeyPanel16 switchPanel3;
  private AccessoryKeyPanel16 switchPanel4;
  private AccessoryKeyPanel16 switchPanel5;
  private AccessoryKeyPanel16 switchPanel6;
  private AccessoryKeyPanel16 switchPanel7;
  private AccessoryKeyPanel16 switchPanel8;
  private AccessoryKeyPanel16 switchPanel9;
  // End of variables declaration//GEN-END:variables

  //Testing
  public static void main(String args[]) {
    try {
      UIManager.setLookAndFeel("com.formdev.flatlaf.FlatLightLaf");
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
      Logger.error("Can't set the LookAndFeel: " + ex);
    }

    java.awt.EventQueue.invokeLater(() -> {
      KeyboardPanelWide testPanel = new KeyboardPanelWide();
      JFrame testFrame = new JFrame("ControllerPanel Tester");
      URL iconUrl = KeyboardPanelWide.class.getResource("/media/jcs-train-2-512.png");
      if (iconUrl != null) {
        testFrame.setIconImage(new ImageIcon(iconUrl).getImage());
      }

      JFrame.setDefaultLookAndFeelDecorated(true);
      testFrame.add(testPanel);

      testFrame.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosing(java.awt.event.WindowEvent e) {
          System.exit(0);
        }
      });
      testFrame.pack();
      testFrame.setLocationRelativeTo(null);
      testFrame.setVisible(true);
    });
  }
}
