/*
 * Copyright 2024 Frans Jacobs.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jcs.ui;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import jcs.util.VersionInfo;
import org.tinylog.Logger;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * About screen to show the used 3rd party libraries
 */
public class AboutDialog extends javax.swing.JDialog {

  /**
   * Creates new form AboutJcs
   *
   * @param parent
   * @param modal
   */
  public AboutDialog(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
    this.versionLbl.setText(VersionInfo.getVersion());

    this.librariesTA.append(getLibrariesFromLicenses());
    this.librariesTA.setCaretPosition(0);
  }

  private static String getLibrariesFromLicenses() {
    try {
      DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
      DocumentBuilder builder = factory.newDocumentBuilder();

      URL url = AboutDialog.class.getClassLoader().getResource("licenses.xml");
      File xmlFile = new File(url.getFile());
      Document document;
      if (xmlFile.exists()) {
        document = builder.parse(xmlFile);
      } else {
        document = builder.parse(AboutDialog.class.getClassLoader().getResource("licenses.xml").openStream());
      }

      NodeList nodeList = document.getElementsByTagName("dependency");
      StringBuilder sb = new StringBuilder();
      sb.append("JCS makes use of the following libraries:\n\n");
      for (int i = 0; i < nodeList.getLength(); i++) {
        Node node = nodeList.item(i);
        String t = node.getTextContent();
        String[] ca = t.split("\n");
        String lib = ca[1].trim() + "." + ca[2].trim() + " version: " + ca[3].trim();
        sb.append(lib);
        sb.append("\n");
      }
      return sb.toString();
    } catch (IOException | ParserConfigurationException | DOMException | SAXException ex) {
      Logger.error(ex);
    }
    return "";
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    northPanel = new javax.swing.JPanel();
    iconPanel = new javax.swing.JPanel();
    jcsIconLbl = new javax.swing.JLabel();
    textPanel = new javax.swing.JPanel();
    titlePanel = new javax.swing.JPanel();
    titleLbl = new javax.swing.JLabel();
    versionPanel = new javax.swing.JPanel();
    copyRightLbl = new javax.swing.JLabel();
    versionTextLbl = new javax.swing.JLabel();
    versionLbl = new javax.swing.JLabel();
    libsPanel = new javax.swing.JPanel();
    librariesSP = new javax.swing.JScrollPane();
    librariesTA = new javax.swing.JTextArea();
    southPanel = new javax.swing.JPanel();
    closeBtn = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("About JCS");
    setPreferredSize(new java.awt.Dimension(410, 300));

    northPanel.setPreferredSize(new java.awt.Dimension(350, 100));
    northPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

    jcsIconLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jcsIconLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/jcs-train-64.png"))); // NOI18N
    jcsIconLbl.setPreferredSize(new java.awt.Dimension(75, 75));
    iconPanel.add(jcsIconLbl);

    northPanel.add(iconPanel);

    textPanel.setPreferredSize(new java.awt.Dimension(300, 100));
    textPanel.setLayout(new jcs.ui.swing.layout.VLayout());

    titlePanel.setPreferredSize(new java.awt.Dimension(300, 50));
    java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 10);
    flowLayout1.setAlignOnBaseline(true);
    titlePanel.setLayout(flowLayout1);

    titleLbl.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
    titleLbl.setText("Java Central Station");
    titlePanel.add(titleLbl);

    textPanel.add(titlePanel);

    versionPanel.setPreferredSize(new java.awt.Dimension(300, 50));
    java.awt.FlowLayout flowLayout2 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
    flowLayout2.setAlignOnBaseline(true);
    versionPanel.setLayout(flowLayout2);

    copyRightLbl.setText("Â© Frans Jacobs");
    copyRightLbl.setPreferredSize(new java.awt.Dimension(110, 17));
    versionPanel.add(copyRightLbl);

    versionTextLbl.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
    versionTextLbl.setText("Version");
    versionPanel.add(versionTextLbl);

    versionLbl.setText("0.0.0");
    versionPanel.add(versionLbl);

    textPanel.add(versionPanel);

    northPanel.add(textPanel);

    getContentPane().add(northPanel, java.awt.BorderLayout.NORTH);

    libsPanel.setPreferredSize(new java.awt.Dimension(100, 200));
    libsPanel.setLayout(new java.awt.BorderLayout());

    librariesTA.setEditable(false);
    librariesTA.setColumns(20);
    librariesTA.setRows(5);
    librariesSP.setViewportView(librariesTA);

    libsPanel.add(librariesSP, java.awt.BorderLayout.CENTER);

    getContentPane().add(libsPanel, java.awt.BorderLayout.CENTER);

    southPanel.setPreferredSize(new java.awt.Dimension(400, 35));
    java.awt.FlowLayout flowLayout3 = new java.awt.FlowLayout();
    flowLayout3.setAlignOnBaseline(true);
    southPanel.setLayout(flowLayout3);

    closeBtn.setText("Close");
    closeBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        closeBtnActionPerformed(evt);
      }
    });
    southPanel.add(closeBtn);

    getContentPane().add(southPanel, java.awt.BorderLayout.PAGE_END);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
    this.setVisible(false);
    this.dispose();
  }//GEN-LAST:event_closeBtnActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton closeBtn;
  private javax.swing.JLabel copyRightLbl;
  private javax.swing.JPanel iconPanel;
  private javax.swing.JLabel jcsIconLbl;
  private javax.swing.JScrollPane librariesSP;
  private javax.swing.JTextArea librariesTA;
  private javax.swing.JPanel libsPanel;
  private javax.swing.JPanel northPanel;
  private javax.swing.JPanel southPanel;
  private javax.swing.JPanel textPanel;
  private javax.swing.JLabel titleLbl;
  private javax.swing.JPanel titlePanel;
  private javax.swing.JLabel versionLbl;
  private javax.swing.JPanel versionPanel;
  private javax.swing.JLabel versionTextLbl;
  // End of variables declaration//GEN-END:variables
}
