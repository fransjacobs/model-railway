/*
 * Copyright 2023 Frans Jacobs.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jcs.ui.layout.dialogs;

import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import jcs.entities.AccessoryBean;
import jcs.persistence.PersistenceFactory;
import jcs.trackservice.TrackControllerFactory;
import jcs.ui.layout.tiles.Signal;
import org.tinylog.Logger;

/**
 *
 * @author fransjacobs
 */
public class SignalDialog extends javax.swing.JDialog {

  private final Signal signal;
  private ComboBoxModel<AccessoryBean> accessoryComboBoxModel;

  /**
   * Creates new form SensorDialog
   *
   * @param parent
   * @param signal
   */
  public SignalDialog(java.awt.Frame parent, Signal signal) {
    super(parent, true);
    this.signal = signal;
    initComponents();

    postInit();
  }

  private void postInit() {
    setLocationRelativeTo(null);
    String text = this.headingLbl.getText() + " " + this.signal.getId();
    this.headingLbl.setText(text);

    if (this.signal != null) {
      List<AccessoryBean> signals = PersistenceFactory.getService().getSignals();
      AccessoryBean emptyBean = new AccessoryBean();
      signals.add(emptyBean);

      accessoryComboBoxModel = new DefaultComboBoxModel(signals.toArray());
      this.accessoryCB.setModel(accessoryComboBoxModel);

      AccessoryBean ab = this.signal.getAccessoryBean();
      if (ab == null) {
        ab = emptyBean;
      }
      this.signal.setAccessoryBean(ab);

      this.accessoryComboBoxModel.setSelectedItem(ab);
      //Unregister is properties might change
      TrackControllerFactory.getTrackController().removeAccessoryListener(signal);
    }
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
   * method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingPanel = new javax.swing.JPanel();
        headingLbl = new javax.swing.JLabel();
        namePanel = new javax.swing.JPanel();
        deviceIdPanel = new javax.swing.JPanel();
        signalLbl = new javax.swing.JLabel();
        accessoryCB = new javax.swing.JComboBox<>();
        contactIdPanel = new javax.swing.JPanel();
        saveExitPanel = new javax.swing.JPanel();
        saveExitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sensor Properties");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        headingPanel.setMinimumSize(new java.awt.Dimension(290, 40));
        headingPanel.setPreferredSize(new java.awt.Dimension(290, 40));
        headingPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        headingLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/new-straight-signal.png"))); // NOI18N
        headingLbl.setText("Signal");
        headingPanel.add(headingLbl);

        getContentPane().add(headingPanel);

        namePanel.setMinimumSize(new java.awt.Dimension(290, 40));
        namePanel.setPreferredSize(new java.awt.Dimension(290, 40));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout1.setAlignOnBaseline(true);
        namePanel.setLayout(flowLayout1);
        getContentPane().add(namePanel);

        deviceIdPanel.setPreferredSize(new java.awt.Dimension(290, 40));
        java.awt.FlowLayout flowLayout2 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout2.setAlignOnBaseline(true);
        deviceIdPanel.setLayout(flowLayout2);

        signalLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        signalLbl.setText("Signal:");
        signalLbl.setPreferredSize(new java.awt.Dimension(100, 16));
        deviceIdPanel.add(signalLbl);

        accessoryCB.setPreferredSize(new java.awt.Dimension(150, 27));
        accessoryCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accessoryCBActionPerformed(evt);
            }
        });
        deviceIdPanel.add(accessoryCB);

        getContentPane().add(deviceIdPanel);

        contactIdPanel.setPreferredSize(new java.awt.Dimension(290, 40));
        java.awt.FlowLayout flowLayout3 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout3.setAlignOnBaseline(true);
        contactIdPanel.setLayout(flowLayout3);
        getContentPane().add(contactIdPanel);

        saveExitPanel.setPreferredSize(new java.awt.Dimension(290, 50));
        java.awt.FlowLayout flowLayout4 = new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT);
        flowLayout4.setAlignOnBaseline(true);
        saveExitPanel.setLayout(flowLayout4);

        saveExitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/save-24.png"))); // NOI18N
        saveExitBtn.setToolTipText("Save and Exit");
        saveExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveExitBtnActionPerformed(evt);
            }
        });
        saveExitPanel.add(saveExitBtn);

        getContentPane().add(saveExitPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveExitBtnActionPerformed
      if (this.signal != null && this.signal.getAccessoryBean() != null) {
        if (this.signal.getAccessoryBean().getName() != null) {
          PersistenceFactory.getService().persist((signal));
          TrackControllerFactory.getTrackController().addAccessoryListener(signal);
        } else {
          this.signal.setAccessoryBean(null);
          PersistenceFactory.getService().persist((signal));
        }
      }
      this.setVisible(false);
      this.dispose();
    }//GEN-LAST:event_saveExitBtnActionPerformed

    private void accessoryCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accessoryCBActionPerformed
      AccessoryBean selected = (AccessoryBean) this.accessoryComboBoxModel.getSelectedItem();
      Logger.trace("Selected: " + selected.toLogString());
      this.signal.setAccessoryBean(selected);
    }//GEN-LAST:event_accessoryCBActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<AccessoryBean> accessoryCB;
    private javax.swing.JPanel contactIdPanel;
    private javax.swing.JPanel deviceIdPanel;
    private javax.swing.JLabel headingLbl;
    private javax.swing.JPanel headingPanel;
    private javax.swing.JPanel namePanel;
    private javax.swing.JButton saveExitBtn;
    private javax.swing.JPanel saveExitPanel;
    private javax.swing.JLabel signalLbl;
    // End of variables declaration//GEN-END:variables
}
