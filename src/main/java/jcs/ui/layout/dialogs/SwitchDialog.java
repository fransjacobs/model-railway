/*
 * Copyright (C) 2022 fransjacobs.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package jcs.ui.layout.dialogs;

import jcs.entities.AccessoryBean;
import jcs.entities.SensorBean;
import jcs.trackservice.TrackServiceFactory;
import jcs.ui.layout.tiles.Switch;

/**
 *
 * @author fransjacobs
 */
public class SwitchDialog extends javax.swing.JDialog {

    private final Switch turnout;

    /**
     * Creates new form SensorDialog
     *
     * @param parent
     * @param turnout
     */
    public SwitchDialog(java.awt.Frame parent, Switch turnout) {
        super(parent, true);
        this.turnout = turnout;
        initComponents();

        postInit();
    }

    private void postInit() {
        setLocationRelativeTo(null);

        if (this.turnout != null) {
            AccessoryBean ab = this.turnout.getAccessoryBean();
            if (ab == null) {
                ab = new AccessoryBean();
                this.turnout.setAccessoryBean(ab);
            } else {
                if (TrackServiceFactory.getTrackService() != null) {
                    //Unregister is properties might change
                    TrackServiceFactory.getTrackService().removeAccessoryListener(turnout);
                }
            }

            this.nameTF.setText(this.turnout.getAccessoryBean().getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingPanel = new javax.swing.JPanel();
        headingLbl = new javax.swing.JLabel();
        namePanel = new javax.swing.JPanel();
        nameLbl = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        deviceIdPanel = new javax.swing.JPanel();
        deviceIdLbl = new javax.swing.JLabel();
        switchCB = new javax.swing.JComboBox<>();
        contactIdPanel = new javax.swing.JPanel();
        contactIdLbl = new javax.swing.JLabel();
        contactIdSpinner = new javax.swing.JSpinner();
        saveExitPanel = new javax.swing.JPanel();
        saveExitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sensor Properties");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        headingPanel.setMinimumSize(new java.awt.Dimension(290, 40));
        headingPanel.setPreferredSize(new java.awt.Dimension(290, 40));
        headingPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        headingLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/new-straight-feedback.png"))); // NOI18N
        headingLbl.setText("Sensor");
        headingPanel.add(headingLbl);

        getContentPane().add(headingPanel);

        namePanel.setMinimumSize(new java.awt.Dimension(290, 40));
        namePanel.setPreferredSize(new java.awt.Dimension(290, 40));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout1.setAlignOnBaseline(true);
        namePanel.setLayout(flowLayout1);

        nameLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        nameLbl.setText("Name:");
        nameLbl.setPreferredSize(new java.awt.Dimension(100, 16));
        namePanel.add(nameLbl);

        nameTF.setPreferredSize(new java.awt.Dimension(150, 26));
        namePanel.add(nameTF);

        getContentPane().add(namePanel);

        deviceIdPanel.setPreferredSize(new java.awt.Dimension(290, 40));
        java.awt.FlowLayout flowLayout2 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout2.setAlignOnBaseline(true);
        deviceIdPanel.setLayout(flowLayout2);

        deviceIdLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        deviceIdLbl.setText("Device ID:");
        deviceIdLbl.setPreferredSize(new java.awt.Dimension(100, 16));
        deviceIdPanel.add(deviceIdLbl);

        switchCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        deviceIdPanel.add(switchCB);

        getContentPane().add(deviceIdPanel);

        contactIdPanel.setPreferredSize(new java.awt.Dimension(290, 40));
        java.awt.FlowLayout flowLayout3 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout3.setAlignOnBaseline(true);
        contactIdPanel.setLayout(flowLayout3);

        contactIdLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        contactIdLbl.setText("Contact ID:");
        contactIdLbl.setPreferredSize(new java.awt.Dimension(100, 16));
        contactIdPanel.add(contactIdLbl);

        contactIdSpinner.setModel(new javax.swing.SpinnerNumberModel());
        contactIdSpinner.setPreferredSize(new java.awt.Dimension(80, 26));
        contactIdPanel.add(contactIdSpinner);

        getContentPane().add(contactIdPanel);

        saveExitPanel.setPreferredSize(new java.awt.Dimension(290, 50));
        java.awt.FlowLayout flowLayout4 = new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT);
        flowLayout4.setAlignOnBaseline(true);
        saveExitPanel.setLayout(flowLayout4);

        saveExitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/save-24.png"))); // NOI18N
        saveExitBtn.setToolTipText("Save and Exit");
        saveExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveExitBtnActionPerformed(evt);
            }
        });
        saveExitPanel.add(saveExitBtn);

        getContentPane().add(saveExitPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveExitBtnActionPerformed

        if (this.turnout != null && this.turnout.getAccessoryBean() != null) {
            this.turnout.getAccessoryBean().setName(this.nameTF.getText());

            if (TrackServiceFactory.getTrackService() != null) {
                TrackServiceFactory.getTrackService().persist((turnout.getTileBean()));

                TrackServiceFactory.getTrackService().addAccessoryListener(turnout);
            }
        }
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_saveExitBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel contactIdLbl;
    private javax.swing.JPanel contactIdPanel;
    private javax.swing.JSpinner contactIdSpinner;
    private javax.swing.JLabel deviceIdLbl;
    private javax.swing.JPanel deviceIdPanel;
    private javax.swing.JLabel headingLbl;
    private javax.swing.JPanel headingPanel;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JPanel namePanel;
    private javax.swing.JTextField nameTF;
    private javax.swing.JButton saveExitBtn;
    private javax.swing.JPanel saveExitPanel;
    private javax.swing.JComboBox<String> switchCB;
    // End of variables declaration//GEN-END:variables
}
