/*
 * Copyright (C) 2019 Frans Jacobs.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package jcs.ui;

import java.awt.GridLayout;
import java.util.Collections;
import java.util.List;
import jcs.entities.SwitchBean;
import jcs.trackservice.TrackServiceFactory;
import jcs.ui.widgets.TurnoutRowPanel;
import org.tinylog.Logger;

/**
 *
 * @author Frans Jacobs
 */
public class TurnoutsPanel extends javax.swing.JPanel {

    /**
     * Creates new form TurnoutsPanel
     */
    public TurnoutsPanel() {
        initComponents();
        initTurnoutPanels();
    }

    private void initTurnoutPanels() {
        refreshPanel();
    }

    public void refreshPanel() {
        if (TrackServiceFactory.getTrackService() == null) {
            return;
        }
        //stub
        List<SwitchBean> turnouts = Collections.EMPTY_LIST; // TrackServiceFactory.getTrackService().getSwitches();

        Logger.trace("There are " + turnouts.size() + " turnouts...");

        this.removeAll();
        int maxW = this.getPreferredSize().width;
        int w = 0, rows = 1, cols = 0;

        for (SwitchBean turnout : turnouts) {
            TurnoutRowPanel turnoutRowPanel = new TurnoutRowPanel(turnout, TurnoutRowPanel.Y_AXIS);
            w = w + turnoutRowPanel.getPreferredSize().width;
            if (rows == 1) {
                cols++;
            }
            if (w > maxW) {
                //next row
                rows++;
                w = 0;
            }

            this.add(turnoutRowPanel);
            TrackServiceFactory.getTrackService().addAccessoiryListener(turnoutRowPanel);
        }
        GridLayout gl = new GridLayout(rows, cols);
        this.setLayout(gl);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(1024, 805));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
