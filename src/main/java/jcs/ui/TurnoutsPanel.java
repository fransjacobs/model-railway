/*
 * Copyright (C) 2019 Frans Jacobs.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package jcs.ui;

import java.awt.GridLayout;
import java.net.URL;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import jcs.JCS;
import jcs.entities.AccessoryBean;
import jcs.persistence.PersistenceFactory;
import jcs.ui.widgets.TurnoutRowPanel;
import org.tinylog.Logger;

/**
 *
 * @author Frans Jacobs
 */
public class TurnoutsPanel extends javax.swing.JPanel {

  /**
   * Creates new form TurnoutsPanel
   */
  public TurnoutsPanel() {
    initComponents();
    initTurnoutPanels();
  }

  private void initTurnoutPanels() {
    refreshPanel();
  }

  public void refreshPanel() {
    if (JCS.getJcsCommandStation() == null) {
      return;
    }

    List<AccessoryBean> turnouts = PersistenceFactory.getService().getTurnouts();
    Logger.trace("There are " + turnouts.size() + " turnouts...");

    this.removeAll();
    int maxW = this.getPreferredSize().width;
    int w = 0, rows = 1, cols = 0;

    for (AccessoryBean turnout : turnouts) {
      TurnoutRowPanel turnoutRowPanel = new TurnoutRowPanel(turnout, TurnoutRowPanel.Y_AXIS);
      w = w + turnoutRowPanel.getPreferredSize().width;
      if (rows == 1) {
        cols++;
      }
      if (w > maxW) {
        //next row
        rows++;
        w = 0;
      }

      this.add(turnoutRowPanel);
      JCS.getJcsCommandStation().addAccessoryEventListener(turnoutRowPanel);
    }
    GridLayout gl = new GridLayout(rows, cols);
    this.setLayout(gl);
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(1024, 805));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
  
  //Testing
  public static void main(String args[]) {
    try {
      UIManager.setLookAndFeel("com.formdev.flatlaf.FlatLightLaf");
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
      Logger.error("Can't set the LookAndFeel: " + ex);
    }

    java.awt.EventQueue.invokeLater(() -> {
      TurnoutsPanel testPanel = new TurnoutsPanel();
      JFrame testFrame = new JFrame("ControllerPanel Tester");
      //this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/media/jcs-train-64.png")));
      URL iconUrl = KeyboardSensorPanel.class.getResource("/media/jcs-train-2-512.png");
      if (iconUrl != null) {
        testFrame.setIconImage(new ImageIcon(iconUrl).getImage());
      }

      JFrame.setDefaultLookAndFeelDecorated(true);
      testFrame.add(testPanel);

      testFrame.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosing(java.awt.event.WindowEvent e) {
          System.exit(0);
        }
      });
      testFrame.pack();
      testFrame.setLocationRelativeTo(null);
      testFrame.setVisible(true);
    });
  }

}
