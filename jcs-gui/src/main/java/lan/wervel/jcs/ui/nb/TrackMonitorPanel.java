/*
 * Copyright (C) 2018 frans.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package lan.wervel.jcs.ui.nb;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToggleButton;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import lan.wervel.jcs.common.TrackRepository;
import lan.wervel.jcs.repository.model.DriveWay;
import lan.wervel.jcs.ui.Refreshable;
import lan.wervel.jcs.util.RepoConFactory;
import lan.wervel.marklin.track.monitor.TrackMonitor;
import org.jdesktop.layout.GroupLayout;
import org.pmw.tinylog.Logger;

/**
 *
 * @author frans
 */
public class TrackMonitorPanel extends JPanel implements Refreshable {

  private static final long serialVersionUID = -7307579557056611848L;

  private final TrackRepository repository;
  private final TrackMonitor monitor;
  private TableModel trackTableModel;
  private Timer timer;

  //lan.wervel.jcs.ui.nb.TrackMonitorPanel
  /**
   * Creates new form TrackMonitorPanel
   */
  public TrackMonitorPanel() {
    repository = RepoConFactory.getRepository();
    monitor = RepoConFactory.getMonitor();

    initTableModel();

    initComponents();

    if (this.repository != null) {
      startRefreshCycle();
    }
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
   * method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    btnPanel = new JPanel();
    autoBtn = new JToggleButton();
    fbBtn = new JToggleButton();
    centerPanel = new JPanel();
    tableScrollPane = new JScrollPane();
    trackTable = new JTable();
    eastPanel = new JPanel();
    feedbackPanel1 = new FeedbackPanel(1,repository);
    nextTrackPanel = new JPanel();
    nxtLbl = new JLabel();
    trackLbl = new JLabel();

    setLayout(new BorderLayout());

    btnPanel.setPreferredSize(new Dimension(110, 150));

    autoBtn.setIcon(new ImageIcon(getClass().getResource("/media/led-square-red-20px.png"))); // NOI18N
    autoBtn.setText("Automatic");
    autoBtn.setSelectedIcon(new ImageIcon(getClass().getResource("/media/led-square-green-20px.png"))); // NOI18N
    autoBtn.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        autoBtnActionPerformed(evt);
      }
    });

    fbBtn.setIcon(new ImageIcon(getClass().getResource("/media/led-square-red-20px.png"))); // NOI18N
    fbBtn.setText("Feedback");
    fbBtn.setPreferredSize(new Dimension(95, 36));
    fbBtn.setSelectedIcon(new ImageIcon(getClass().getResource("/media/led-square-green-20px.png"))); // NOI18N
    fbBtn.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        fbBtnActionPerformed(evt);
      }
    });

    GroupLayout btnPanelLayout = new GroupLayout(btnPanel);
    btnPanel.setLayout(btnPanelLayout);
    btnPanelLayout.setHorizontalGroup(btnPanelLayout.createParallelGroup(GroupLayout.LEADING)
      .add(btnPanelLayout.createSequentialGroup()
        .addContainerGap()
        .add(btnPanelLayout.createParallelGroup(GroupLayout.LEADING)
          .add(autoBtn)
          .add(fbBtn, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .add(599, 599, 599))
    );
    btnPanelLayout.setVerticalGroup(btnPanelLayout.createParallelGroup(GroupLayout.LEADING)
      .add(btnPanelLayout.createSequentialGroup()
        .addContainerGap()
        .add(fbBtn, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        .add(4, 4, 4)
        .add(autoBtn)
        .add(138, 138, 138))
    );

    add(btnPanel, BorderLayout.WEST);

    centerPanel.setMinimumSize(new Dimension(650, 150));
    centerPanel.setPreferredSize(new Dimension(600, 150));
    centerPanel.setRequestFocusEnabled(false);
    centerPanel.setLayout(new GridLayout(1, 1));

    tableScrollPane.setMinimumSize(new Dimension(450, 200));

    trackTable.setModel(trackTableModel);
    trackTable.setGridColor(new Color(204, 204, 204));
    tableScrollPane.setViewportView(trackTable);

    centerPanel.add(tableScrollPane);

    add(centerPanel, BorderLayout.CENTER);

    eastPanel.setPreferredSize(new Dimension(500, 150));
    eastPanel.add(feedbackPanel1);

    nextTrackPanel.setPreferredSize(new Dimension(200, 150));

    nxtLbl.setLabelFor(nxtLbl);
    nxtLbl.setText("NextTrack");

    trackLbl.setFont(new Font("Lucida Grande", 1, 48)); // NOI18N
    trackLbl.setText("0");

    GroupLayout nextTrackPanelLayout = new GroupLayout(nextTrackPanel);
    nextTrackPanel.setLayout(nextTrackPanelLayout);
    nextTrackPanelLayout.setHorizontalGroup(nextTrackPanelLayout.createParallelGroup(GroupLayout.LEADING)
      .add(nextTrackPanelLayout.createSequentialGroup()
        .addContainerGap(74, Short.MAX_VALUE)
        .add(nextTrackPanelLayout.createParallelGroup(GroupLayout.LEADING)
          .add(GroupLayout.TRAILING, nextTrackPanelLayout.createSequentialGroup()
            .add(nxtLbl)
            .add(61, 61, 61))
          .add(GroupLayout.TRAILING, nextTrackPanelLayout.createSequentialGroup()
            .add(trackLbl)
            .add(77, 77, 77))))
    );
    nextTrackPanelLayout.setVerticalGroup(nextTrackPanelLayout.createParallelGroup(GroupLayout.LEADING)
      .add(GroupLayout.TRAILING, nextTrackPanelLayout.createSequentialGroup()
        .addContainerGap()
        .add(nxtLbl)
        .add(50, 50, 50)
        .add(trackLbl)
        .addContainerGap(20, Short.MAX_VALUE))
    );

    eastPanel.add(nextTrackPanel);

    add(eastPanel, BorderLayout.EAST);
  }// </editor-fold>//GEN-END:initComponents

  private void fbBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_fbBtnActionPerformed
    Logger.trace(evt.getActionCommand());
    if (this.fbBtn.isSelected()) {
      this.repository.startFeedbackCycle();
    } else {
      if (monitor.isRunning()) {
        monitor.stopProcess();
      }
      repository.stopFeedbackCycle();
    }
  }//GEN-LAST:event_fbBtnActionPerformed

  private void autoBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_autoBtnActionPerformed
    Logger.trace(evt.getActionCommand());
    if (this.autoBtn.isSelected()) {
      //Feedbach cycle should run...
      if (!repository.isFeedbackCycleRunning()) {
        repository.startFeedbackCycle();
      }

      RepoConFactory.getMonitor().startProcess();
      Logger.debug("Start Auto mode...");
    } else {
      RepoConFactory.getMonitor().stopProcess();
      Logger.debug("Stop Auto mode...");

    }
  }//GEN-LAST:event_autoBtnActionPerformed

  private void initTableModel() {
    @SuppressWarnings("UseOfObsoleteCollectionType")
    Vector<Vector<String>> data = new Vector<>();
    @SuppressWarnings("UseOfObsoleteCollectionType")
    Vector<String> columnNames = new Vector<>();

    for (DriveWay track : monitor.getTracks()) {
      @SuppressWarnings("UseOfObsoleteCollectionType")
      Vector<String> row = new Vector<>();
      row.add(track.getName());
      row.add(track.getDescription());
      row.add("" + track.getTrackStatus());
      row.add((track.isActive() ? "Y" : "N"));
      data.add(row);
    }

    columnNames.add("Name");
    columnNames.add("Description");
    columnNames.add("Status");
    columnNames.add("Active");

    trackTableModel = new DefaultTableModel(data, columnNames);
  }

  @Override
  public void refresh() {

    this.fbBtn.setSelected(this.repository.isFeedbackCycleRunning());
    this.autoBtn.setSelected(this.monitor.isRunning());

    @SuppressWarnings("UseOfObsoleteCollectionType")
    Vector<Vector<String>> data = new Vector<>();
    @SuppressWarnings("UseOfObsoleteCollectionType")
    Vector<String> columnNames = new Vector<>();

    for (DriveWay track : monitor.getTracks()) {
      @SuppressWarnings("UseOfObsoleteCollectionType")
      Vector<String> row = new Vector<>();
      row.add(track.getName());
      row.add(track.getDescription());
      row.add("" + track.getTrackStatus());
      row.add((track.isActive() ? "Y" : "N"));
      data.add(row);
    }

    columnNames.add("Name");
    columnNames.add("Description");
    columnNames.add("Status");
    columnNames.add("Active");

    ((DefaultTableModel) trackTableModel).setDataVector(data, columnNames);
    
    this.trackLbl.setText(this.monitor.getNextTrack()+"");
    
  }

  public final void startRefreshCycle() {
    Logger.debug(this.getName() + " Starting refresh cycle...");
    timer = new Timer(500, (ActionEvent e) -> {
      refresh();
    });

    timer.setRepeats(true);
    timer.start();
  }

  public final void stopRefreshCycle() {
    this.timer.stop();
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JToggleButton autoBtn;
  private JPanel btnPanel;
  private JPanel centerPanel;
  private JPanel eastPanel;
  private JToggleButton fbBtn;
  private FeedbackPanel feedbackPanel1;
  private JPanel nextTrackPanel;
  private JLabel nxtLbl;
  private JScrollPane tableScrollPane;
  private JLabel trackLbl;
  private JTable trackTable;
  // End of variables declaration//GEN-END:variables

}
